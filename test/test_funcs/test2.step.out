(let fact = (fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) in (fact 5))
((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) 5)
(if (> 5 0) (* 5 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) (- 5 1))) 1)
(if true (* 5 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) (- 5 1))) 1)
(* 5 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) (- 5 1)))
(* 5 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) 4))
(* 5 (if true (* 4 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) (- 4 1))) 1))
(* 5 (* 4 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) 3)))
(* 5 (* 4 (if true (* 3 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) (- 3 1))) 1)))
(* 5 (* 4 (* 3 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) 2))))
(* 5 (* 4 (* 3 (if true (* 2 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) (- 2 1))) 1))))
(* 5 (* 4 (* 3 (* 2 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) 1)))))
(* 5 (* 4 (* 3 (* 2 (if true (* 1 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) (- 1 1))) 1)))))
(* 5 (* 4 (* 3 (* 2 (* 1 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) 0))))))
(* 5 (* 4 (* 3 (* 2 (* 1 (if false (* 0 ((fix f n -> (if (> n 0) (* n (f (- n 1))) 1)) (- 0 1))) 1))))))
(* 5 (* 4 (* 3 (* 2 (* 1 1)))))
(* 5 (* 4 (* 3 (* 2 1))))
(* 5 (* 4 (* 3 2)))
(* 5 (* 4 6))
(* 5 24)
120